spring.profiles.include=retry, third-party-config, circuitbreaker

spring.datasource.hikari.maximum-pool-size=${DB_POOL_MAX_SIZE:20}
spring.datasource.hikari.minimum-idle=${DB_POOL_MIN_IDLE:2}
spring.datasource.hikari.idle-timeout=${DB_POOL_IDLE_TIMEOUT_IN_MS:10000}

#spring.datasource.url=${DATASOURCE_URL:jdbc:postgresql://localhost:5432/splitwise}?stringtype=unspecified
#spring.datasource.password=${DATASOURCE_PASSWORD:password}
#spring.datasource.username=${DATASOURCE_USERNAME:postgres}

#database details for READ_WRITE_DB
spring.datasource.read-write.url=${DATASOURCE_URL:jdbc:postgresql://localhost:5432/splitwise}?stringtype=unspecified
spring.datasource.read-write.password=${DATASOURCE_PASSWORD:password}
spring.datasource.read-write.username=${DATASOURCE_USERNAME:admin}
#database details for READ_ONLY
spring.datasource.read-only.url=${DATASOURCE_URL:jdbc:postgresql://localhost:5432/splitwise}?stringtype=unspecified
spring.datasource.read-only.password=${DATASOURCE_PASSWORD:password}
spring.datasource.read-only.username=${DATASOURCE_USERNAME:admin}

spring.jpa.hibernate.ddl-auto=none
#logging.level.org.hibernate.SQL=DEBUG
#logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
spring.jpa.show-sql=true

server.servlet.context-path=/splitwise
service.name=${SERVICE_NAME:splitwise-service}
server.port=${PORT:8080}

#kafka
kafka.servers=${KAFKA_SERVER:localhost:9092}
audit.kafka.servers=${AUDIT_KAFKA_SERVER:localhost:9092}
kafka.auditlog.topic=${AUDIT_LOG_TOPIC:audit-logs}
kms.base-url=${KMS_BASE_URL:http://google.com}
producer.timeout.in.seconds=${PRODUCER_TIMEOUT_IN_SECONDS:15}
consumer.retry.attempts=${CONSUMER_RETRY_ATTEMPTS:3}
consumer.max.poll.interval.ms=${CONSUMER_MAX_POLL_INTERVAL_MS:300000}
consumer.max.poll.size=${CONSUMER_MAX_POLL_SIZE:50}
max.request.size=${MAX_REQUEST_SIZE:3145728}
producer.max.in.flight.requests=${PRODUCER_MAX_IN_FLIGHT_REQUEST:1}
consumer.auto.offset=${CONSUMER_AUTO_OFFSET:latest}
producer.enable.idempotency=${PRODUCER_ENABLE_IDEMPOTENCY:true}
kafka.cluster.api.key=${KAFKA_CLUSTER_API_KEY:key}
kafka.cluster.api.secret=${KAFKA_CLUSTER_API_SECRET:secret}

#topics
payment.event.topic=${PAYMENT_EVENT_TOPIC:splitwise-payment-events}
payment.event.consumer.group=${PAYMENT_EVENT_CONSUMER__GROUP:splitwise-payment-consumer-group}